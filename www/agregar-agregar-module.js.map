{"version":3,"sources":["webpack:///./src/app/models/lista-item.model.ts","webpack:///./src/app/pages/agregar/agregar.module.ts","webpack:///./src/app/pages/agregar/agregar.page.html","webpack:///./src/app/pages/agregar/agregar.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;IAKI,mBAAa,OAAe;QACxB,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;QAC3B,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5B,CAAC;IACL,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACTwC;AACM;AACF;AACU;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAWF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAT7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;ACzB9B,qOAAqO,gBAAgB,umBAAumB,gWAAgW,oBAAoB,8W;;;;;;;;;;;;;;;;;;;;ACA9pC;AACY;AACb;AAES;AAM1D;IAKE,qBAAqB,aAA4B,EAAU,KAAqB;QAA3D,kBAAa,GAAb,aAAa,CAAe;QAAU,UAAK,GAAL,KAAK,CAAgB;QAFhF,eAAU,GAAG,EAAE,CAAC;QAId,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC5D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAE,OAAO,CAAE,CAAC;IAEzD,CAAC;IAED,8BAAQ,GAAR;IACA,CAAC;IAED,qCAAqC;IACrC,iCAAW,GAAX;QACE,IAAK,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAG;YAClC,OAAO;SACR;QAED,6CAA6C;QAC7C,IAAM,SAAS,GAAG,IAAI,kEAAS,CAAE,IAAI,CAAC,UAAU,CAAE,CAAC;QACnD,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAE,SAAS,CAAE,CAAC;QAEnC,4DAA4D;QAC5D,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IACtC,CAAC;IAED,iCAAiC;IACjC,iCAAW,GAAX,UAAa,IAAe;QAC1B,IAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK;aACV,MAAM,CAAE,kBAAQ,IAAI,QAAC,QAAQ,CAAC,UAAU,EAApB,CAAoB,CAAE;aAC1C,MAAM,CAAC;QAEhC,IAAK,UAAU,KAAK,CAAC,EAAG;YACtB,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC;YACpC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;SAC7B;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC;YAC9B,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC;SAC9B;QAED,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;QACpC,0CAA0C;IAC5C,CAAC;IAED,8BAA8B;IAC9B,4BAAM,GAAN,UAAQ,CAAS;QACf,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,CAAE,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IACtC,CAAC;IApDU,WAAW;QAJvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,qGAAkC;SACnC,CAAC;+EAMoC,sEAAa,EAAiB,8DAAc;OALrE,WAAW,CAsDvB;IAAD,kBAAC;CAAA;AAtDuB","file":"agregar-agregar-module.js","sourcesContent":["export class ListaItem {\n\n    descripcion: string;\n    completado: boolean;\n\n    constructor( descrip: string ) {\n        this.descripcion = descrip;\n        this.completado = false;\n    }\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AgregarPage } from './agregar.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AgregarPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AgregarPage]\n})\nexport class AgregarPageModule {}\n","module.exports = \"<ion-header no-border>\\n  <ion-toolbar color=\\\"dark\\\">\\n\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button color=\\\"tertiary\\\" defaultHref=\\\"/\\\"></ion-back-button>\\n    </ion-buttons>\\n\\n    <ion-title>{{ lista.titulo }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content color=\\\"dark\\\">\\n    <ion-list color=\\\"dark\\\">\\n      <ion-item color=\\\"dark\\\">\\n        <ion-label position=\\\"floating\\\">Nuevo item</ion-label>\\n        <ion-input type=\\\"text\\\"\\n                   [(ngModel)]=\\\"nombreItem\\\"\\n                   (keyup.enter)=\\\"agregarItem()\\\"></ion-input>\\n      </ion-item>\\n    </ion-list>\\n\\n    <ion-list>\\n      <ion-list-header color=\\\"dark\\\" *ngIf=\\\"lista.items.length > 0\\\">\\n        <ion-label>Tareas por hacer</ion-label>\\n      </ion-list-header>\\n\\n      <ion-item-sliding *ngFor=\\\"let item of lista.items; let i = index\\\"\\n                        class=\\\"animated fadeInDown\\\">\\n\\n        <ion-item color=\\\"dark\\\">\\n          <ion-checkbox slot=\\\"start\\\"\\n                        color=\\\"tertiary\\\"\\n                        [(ngModel)]=\\\"item.completado\\\"\\n                        (ionChange)=\\\"cambioCheck( item )\\\"></ion-checkbox>\\n          <ion-label>{{ item.descripcion }}</ion-label>\\n        </ion-item>\\n<!-- Boton Eliminar Tarea -->\\n        <ion-item-options side=\\\"end\\\">\\n          <ion-item-option (click)=\\\"borrar(i)\\\" color=\\\"danger\\\">\\n            <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n          </ion-item-option>\\n        </ion-item-options>\\n\\n      </ion-item-sliding>\\n    </ion-list>\\n</ion-content>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { TareasService } from '../../services/tareas.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { Lista } from '../../models/lista.model';\nimport { ListaItem } from '../../models/lista-item.model';\n\n@Component({\n  selector: 'app-agregar',\n  templateUrl: './agregar.page.html'\n})\nexport class AgregarPage implements OnInit {\n\n  lista: Lista;\n  nombreItem = '';\n\n  constructor( private tareasService: TareasService, private route: ActivatedRoute ) {\n\n    const listaId = this.route.snapshot.paramMap.get('listaId');\n    this.lista = this.tareasService.cargarLista( listaId );\n\n  }\n\n  ngOnInit() {\n  }\n\n  // AÃ±adir elementos a la lista creada\n  agregarItem() {\n    if ( this.nombreItem.length === 0 ) {\n      return;\n    }\n\n    // Creamos el objeto y lo metemos en el Array\n    const nuevoItem = new ListaItem( this.nombreItem );\n    this.lista.items.push( nuevoItem );\n\n    // Y despues, limpiamos el item y lo guardamos en el Storage\n    this.nombreItem = '';\n    this.tareasService.guardarStorage();\n  }\n\n  // Marcar o Desmarcar el CheckBox\n  cambioCheck( item: ListaItem ) {\n    const pendientes = this.lista.items\n                            .filter( itemData => !itemData.completado )\n                            .length;\n\n    if ( pendientes === 0 ) {\n      this.lista.terminadaEn = new Date();\n      this.lista.terminada = true;\n    } else {\n      this.lista.terminadaEn = null;\n      this.lista.terminada = false;\n    }\n\n    this.tareasService.guardarStorage();\n    // console.log(this.tareasService.listas);\n  }\n\n  // Borrar elemento de la lista\n  borrar( i: number ) {\n    this.lista.items.splice( i, 1 );\n    this.tareasService.guardarStorage();\n  }\n\n}\n"],"sourceRoot":""}